/*CRIADO E DESENVOLVIDO POR FRANCISCO IVAN NUNES MESQUITA 15/09/2016
  COPIE E COLE NO CODE BLOCKS*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>
#include <time.h>
#define N 20
#define N_tamanhoDoBarco 10
#define N_ParDeBarcos  15
#define N_Municao 2000

void LimpaTela()
{
    system("cls");
}

void Carregamento()
{
    int i = 0;
    printf("\n\n\n\n\n\n\n\n\n\n                                             Loading...\n                    ");
    for ( i = 0; i<40; i++)
    {
        printf("%c",220);
        Sleep(10);
        system("color 3F");

    }
    system("cls");
    printf("\n\n\n\n\n\n\n\n\n\n\n\n                             Criado e Desenvolvido por FranciscoSoft%c",169);

    Sleep(3000);
    LimpaTela();
    printf("\n\n                           .                 |\n                           +                 |\n                  .        |                *+W+-*\n     .           +y        +W+              . H                 .\n  .  +y            |I.   y  |               ! H= .           .  ^\n  !   \\     .     |H '. /   |  ___.        .! H  !   +--.--y !  V\n  !    \\     \\  +=|H|=='.=+ | |====\   _  '_H_H__H_. H_/=  J !  !\n . !     \\'    VVV_HHH_/__'._H |  E  \\_|=|_|========|_|==|____H. ! _______.\nI-H_I=I=HH_==_|I_IIIII_I_I_=HH|======.I-I-I-=======-I=I=I=I_=H|=H'===I=I/\n \\                                                                     ,\n |                                                                    /\n .___________________________________________________________________'\n\n");

    printf(" _____       ___   _____       ___   _       _   _       ___\n|  _  \\     /   | |_   _|     /   | | |     | | | |     /   |\n| |_| |    / /| |   | |      / /| | | |     | |_| |    / /| |\n|  _  {   / / | |   | |     / / | | | |     |  _  |   / / | |\n| |_| |  / /  | |   | |    / /  | | | |___  | | | |  / /  | |\n|_____/ /_/   |_|   |_|   /_/   |_| |_____| |_| |_| /_/   |_|\n");

    printf(" __   _       ___   _     _       ___   _\n|  \\ | |     /   | | |   / /     /   | | |\n|   \\| |    / /| | | |  / /     / /| | | |\n| |\\   |   / / | | | | / /     / / | | | |\n| | \\  |  / /  | | | |/ /     / /  | | | |___\n|_|  \\_| /_/   |_| |___/     /_/   |_| |_____|\n");
    Sleep(3000);

    LimpaTela();

}

void GeraMatriz(char mapa[][N],char c)
{
    int i,j;

    for(i=0,j=0; i<N; i++)
    {
        mapa[i][j] = c;
        for(j=1; j<N; j++)
        {
            mapa[i][j] = c;
        }
        j=0;
    }

}

void ImprimeMatriz(char mapa[][N])
{

    printf("    A B C D E F G H I J K L M N O P Q R S T\n");
    int i,j,l=0;
    for(j=0,i=0; i<N; i++)
    {
        if(l<10)
            printf(" ");//comeco da linha
        printf("%   i %c",l,mapa[i][j]);
        for(j=1; j<N; j++)//j varia
        {
            printf(" %c",mapa[i][j]);
            if(j==(N-1))
                printf("\n");// fim da linha i varia

        }
        j=0;
        l++;
    }
}

void ImprimeDuasMatrizes(char mapa[][N],char mapa2[][N])
{

    printf("    A B C D E F G H I J K L M N O P Q R S T    A B C D E F G H I J K L M N O P Q R S T\n");
    int i,j,l=0;
    for(j=0,i=0; i<N; i++)
    {
        if(l<10)
            printf(" ");//comeco da linha
        printf("%   i %c",l,mapa[i][j]);
        for(j=1; j<N; j++)//j varia
        {
            printf(" %c",mapa[i][j]);
            if(j==(N-1))

                for(j=0; j<N;)
                {
                    if(l<10)
                        printf(" ");//comeco da linha
                    printf("%   i %c",l,mapa2[i][j]);
                    for(j=1; j<N; j++)//j varia
                    {
                        printf(" %c",mapa2[i][j]);
                        if(j==(N-1))
                            printf("\n");// fim da linha i varia

                    }

                }

        }
        j=0;
        l++;
    }
}

void AtiraNaMatrizPlayer(char matriz1[][N],char matriz2[][N])
{

    char x;
    int y;
    printf("escolha uma letra:\n");
    scanf(" %c",&x);
    printf("escolha um numero\n");
    scanf("%i",&y);
   // x = ConverteCharParaInt(f);
     x=x-97;
    matriz1[y][x]=matriz2[y][x];

}


void AtiraNaMatrizRobo(char matriz1[][N],char matriz3[][N])
{
    int y;
    int x;
    char c = 254, g= 176;
    int i,j,l=1;



    for(i=0,j=0; i<N; i++)
    {
        if(matriz3[i][j] == c)
        {
            x=j;
            y=i;
            i=N;
            l=0;

        }
        if(l)
        {
            for(j=1; j<N; j++)
            {
                if(matriz3[i][j] == c)
                {
                    x=j;
                    y=i;
                    i=N;

                }
            }
        }
        j=0;
    }




// achou
    if(matriz3[y][x] == c)
    {
        if(matriz3[y][x+1]=='o'||matriz3[y][x+1]=='X')
        {
            if(matriz3[y][x-1]=='o'||matriz3[y][x-1]=='X')
            {
                if(matriz3[y+1][x]=='o'||matriz3[y+1][x]=='X')
                {
                    if(matriz3[y-1][x]=='o'||matriz3[y-1][x]=='X')
                    {
                        matriz3[y][x] = 'o';
                    }
                    else
                    {
                        if(matriz1[y-1][x] == c)
                        {
                            matriz3[y-1][x] = matriz1[y-1][x];//atualiza acertos
                            matriz1[y-1][x] = 176; //tiro
                            matriz3[y][x] = 'o';
                        }
                        else
                        {
                            matriz1[y-1][x] = 'X';//tiro
                            matriz3[y-1][x] = 'X';

                        }
                    }
                }
                else
                {
                    if(matriz1[y+1][x] == c)
                    {
                        matriz3[y+1][x] = matriz1[y+1][x];//atualiza acertos
                        matriz1[y+1][x] = 176; //tiro
                        matriz3[y][x] = 'o';
                    }
                    else
                    {
                        matriz1[y+1][x] = 'X';//tiro
                        matriz3[y+1][x] = 'X';
                    }
                }
            }
            else
            {
                if(matriz1[y][x-1] == c)
                {
                    matriz3[y][x-1] = matriz1[y][x-1];//atualiza acertos
                    matriz1[y][x-1] = 176; //tiro
                    matriz3[y][x] = 'o';
                }
                else
                {
                    matriz1[y][x-1] = 'X';//tiro
                    matriz3[y][x-1] = 'X';
                }

            }
        }
        else
        {
            if(matriz1[y][x+1] == c)
            {
                matriz3[y][x+1] = matriz1[y][x+1];//atualiza acertos
                matriz1[y][x+1] = 176; //tiro
                matriz3[y][x] = 'o';
            }
            else
            {
                matriz1[y][x+1] = 'X';//tiro
                matriz3[y][x+1] = 'X';
            }
        }



    }
    else
    {
        srand( (unsigned)time(NULL) );
        y = rand()%20;
        x = rand()%20;

        if(matriz1[y][x] == c)
        {
            matriz3[y][x] = matriz1[y][x];//atualiza acertos
            matriz1[y][x] = 176; //tiro
        }
        else
        {
            l=1;
            while(l ==1)
            {
                if(matriz1[y][x]!= g || matriz1[y][x]!= 'X')
                {
                    matriz1[y][x] = 'X';//tiro
                    l=0;
                }
                else
                {
                    srand( (unsigned)time(NULL) );
                    y = rand()%N;
                    x = rand()%N;
                }
            }
        }

    }
}
void Aleatorio(char matriz[][N])
{
    int x,y;
    srand( (unsigned)time(NULL) );
    y = rand()%N;
    x = rand()%N;

}

void InsereBarcoHorinzontal(char matriz[][N],int i,int j,int tamanho)
{


    int l;
    l = j+tamanho;

    for(; j<l; j++)
        matriz[i][j] = 254;

}

void InsereBarcoVertical(char matriz[][N],int i,int j, int tamnaho)
{
    int l;
    l = i+tamnaho;

    for(; i<l; i++)
        matriz[i][j] = 254;
}
int ChecaMatriz(char matriz1[][N],char matriz2[][N])
{

    int i,j,l=0,k=0;
    char c = 254;
    for(i=0,j=0; i<N; i++)
    {
        if(matriz1[i][j] == c)
            l++;
        for(j=1; j<N; j++)
        {
            if(matriz1[i][j] == c)
                l++;
        }
        j=0;
    }

    for(i=0,j=0; i<N; i++)
    {
        if(matriz2[i][j] == c)
            k++;
        for(j=1; j<N; j++)
        {
            if(matriz2[i][j] == c)
                k++;
        }
        j=0;
    }

    if(k==l)
        return 1;
    else
        return 0;

}
void PosicionarBarcosDoRobo(char matriz[][N])
{
    int x1,y1,x2,y2,i;
    srand( (unsigned)time(NULL) );
    for(i=0; i<N_ParDeBarcos; i++)
    {

        x1 = rand()%20;
        y1 = rand()%20;
        x2 = rand()%20;
        y2 = rand()%20;

        if(x1>=(N-N_tamanhoDoBarco))//verifica se x esta fora do intervalo
        {
            x1=(N-N_tamanhoDoBarco);
        }
        if(y1>=(N-N_tamanhoDoBarco))//verifica se y esta fora do intervalo
        {
            y1=(N-N_tamanhoDoBarco);
        }
        if(x2>=(N-N_tamanhoDoBarco))//verifica se x esta fora do intervalo
        {
            x2=(N-N_tamanhoDoBarco);
        }
        if(y2>=(N-N_tamanhoDoBarco))//verifica se y esta fora do intervalo
        {
            y2=(N-N_tamanhoDoBarco);
        }
        InsereBarcoHorinzontal(matriz,x1,y1,N_tamanhoDoBarco);
        InsereBarcoVertical(matriz,x2,y2,N_tamanhoDoBarco);
    }



}
void PosicionarBarcosDoPlayer(char matriz[][N],int numeroDeBarcos)
{
    char p;
    printf("posicionar barcos navios manualmente digite \'S\' aleatoriamente \'N\'?");
    scanf("%c",&p);
    LimpaTela();
    if(p=='s')
    {
        char x,orientacao;
        int i,y;
        for(i=0; i<numeroDeBarcos; i++)
        {
            ImprimeMatriz(matriz);
            printf("seu barco numero %i ficara na horizontal ou vertical?\na)vertical\nb)horizontal\n",(i+1));
            scanf(" %c",&orientacao);
            printf("insira as coordenadas para seu barco nuumero %i\n", (i+1));

            printf("escolha uma letra:\n");
            scanf(" %c",&x);
            x= x-97;
            if(x>=(N-N_tamanhoDoBarco))//verifica se x esta fora do intervalo
            {
                x=(N-N_tamanhoDoBarco);
            }
            printf("escolha um numero:\n");
            scanf("%i",&y);
            if(y>=(N-N_tamanhoDoBarco))//verifica se y esta fora do intervalo
            {
                y=(N-N_tamanhoDoBarco);
            }
            if(orientacao == 'a')
                InsereBarcoVertical(matriz,y,x,N_tamanhoDoBarco);
            if( orientacao == 'b')
                InsereBarcoHorinzontal(matriz,y,x,N_tamanhoDoBarco);
            LimpaTela();
        }
    }
    else
    {
        PosicionarBarcosDoRobo(matriz);

    }

    ImprimeMatriz(matriz);
    printf("O posicionamento dos seus %i Navios esta concluido\n",numeroDeBarcos);
    Sleep(3000);
    LimpaTela();
}
int main()
{
    system("MODE con cols=100 lines=29"); //Redimensiona a tela
    system("color 3F"); // cores
    Carregamento(); // tela de carregamento
    int i; // variaveis globais


    char mapaDeInterFaceRobo[N][N];
    char mapaDeContrasteRobo[N][N];
    char mapaDeInterFacePlayer[N][N];
    char mapaDeAcertosDoRobo[N][N];

    GeraMatriz(mapaDeInterFaceRobo,'~');//robo
    GeraMatriz(mapaDeContrasteRobo,'X');//robo
    GeraMatriz(mapaDeInterFacePlayer,'~');//player
    GeraMatriz(mapaDeAcertosDoRobo,'~');

    PosicionarBarcosDoRobo(mapaDeContrasteRobo);
    PosicionarBarcosDoPlayer(mapaDeInterFacePlayer,(N_ParDeBarcos*2));


    for(i=0; i<N_Municao; i++)
    {
          fflush(stdin); // limpa buffer sujeira do teclado
          fflush(stdout); // limpa buffer sujeira tela

        ImprimeDuasMatrizes(mapaDeInterFaceRobo,mapaDeInterFacePlayer);

        AtiraNaMatrizRobo(mapaDeInterFacePlayer,mapaDeAcertosDoRobo);
        AtiraNaMatrizPlayer(mapaDeInterFaceRobo,mapaDeContrasteRobo);


        LimpaTela();

        if(ChecaMatriz(mapaDeInterFaceRobo,mapaDeContrasteRobo))
        {
            LimpaTela();
            printf("Vitoria!!!");
            exit(0);
        }
    }


    return 0;

}









/*

 system("color 79");



Valor Correspondente = Cor

0 = Black ----------- 8 = Gray

1 = Blue ------------ 9 = Light Blue

2 = Green ---------- A = Light Green

3 = Aqua ----------- B = Light Aqua

4 = Red ------------ C = Light Red

5 = Purple --------- D = Light Purple

6 = Yellow --------- E = Light Yellow

7 = White ---------- F = Bright White


//abre o arquivo
  arquivo = fopen("dados.csv", "w");
  // testa se conseguiu abrir o aquivo
  if(arquivo == NULL)
  {
      printf("nao foi possivel abrir ");
      exit(EXIT_FAILURE);
  }
  // escreve dentro do arquivo
  fprintf(arquivo,"ola mundo!");
      //fecha o arquivo
  fclose(arquivo);
  exit(EXIT_SUCCESS);*/
